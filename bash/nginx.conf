server {
    listen 443 ssl;
    server_name %app_domain%;

    ssl_certificate /etc/letsencrypt/live/%app_domain%/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/%app_domain%/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/%app_domain%/fullchain.pem;

    root %app_dir%;
    index index.html index.htm index.nginx-debian.html;

    location / {
        try_files $uri $uri/ =404;
    }

    location /ipfs/ {
        proxy_pass http://127.0.0.1:2052/ipfs/;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /api/ {
        client_max_body_size 2000m;
        proxy_pass http://127.0.0.1:2052/;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /.well-known/ {
        alias /var/www/%app_domain%/.well-known/;
    }
}

server {
    listen 2053 ssl;
    server_name %app_domain%;

    client_max_body_size 2000m;

    ssl_certificate /etc/letsencrypt/live/%app_domain%/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/%app_domain%/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/%app_domain%/fullchain.pem;

    location / {
        proxy_pass http://127.0.0.1:2052/;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /.well-known/ {
        alias /var/www/%app_domain%/.well-known/;
    }
}

# Gateway START
server {
    listen 443 ssl default_server;
    server_name _;

    ssl_certificate     /etc/letsencrypt/live/$ssl_server_name/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/$ssl_server_name/privkey.pem;

    location / {
        proxy_pass http://127.0.0.1:2082/;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    location /.well-known/ {
        alias /var/www/$host/.well-known/;
    }
}
# Gateway END

server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;
    return 301 https://$host$request_uri;
}